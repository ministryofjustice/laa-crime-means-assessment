import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id "java"
    id "jacoco"
    id "org.springframework.boot" version "3.0.5"
    id "org.sonarqube" version "4.0.0.2929"
    id "info.solidsoft.pitest" version "1.9.11"
    id "org.jsonschema2dataclass" version "6.0.0"
}

def versions = [
        pitest                             : "1.4.10",
        springdocVersion                   : "2.1.0",
        okhttpVersion                      : "4.9.3",
        mockwebserverVersion               : "4.9.3",
        liquibase                          : "4.20.0"
]

group = "uk.gov.justice.laa.crime"

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}


repositories {
    mavenCentral()
}


dependencies {
    implementation platform(SpringBootPlugin.BOM_COORDINATES)
    annotationProcessor platform(SpringBootPlugin.BOM_COORDINATES)

    implementation platform("io.sentry:sentry-bom:6.25.2")
    implementation("io.sentry:sentry-spring-boot-starter")
    implementation("io.sentry:sentry-logback")

    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"

    implementation "org.postgresql:postgresql"
    implementation "org.apache.commons:commons-lang3"
    implementation "org.liquibase:liquibase-core:$versions.liquibase"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$versions.springdocVersion"
    implementation "uk.gov.justice.service.laa-crime:crime-commons-spring-boot-starter-rest-client:2.0.0"

    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    
    // Replace this when upgrading to Spring Boot 3.x
    testImplementation "com.h2database:h2"
    testImplementation "org.mockito:mockito-inline"
    testImplementation "org.pitest:pitest:$versions.pitest"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "com.squareup.okhttp3:okhttp:$versions.okhttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.mockwebserverVersion"
}

test {
    dependsOn "cleanTest"
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            "**/entity/**",
                            "**/dto/**",
                            "**/config/**"
                    ])
        }))
    }

}

pitest {
    targetClasses = ["uk.gov.justice.laa.crime.meansassessment.service.*","uk.gov.justice.laa.crime.meansassessment.controller.*","uk.gov.justice.laa.crime.meansassessment.validation.*"]
    excludedClasses = ["uk.gov.justice.laa.crime.meansassessment.dto.*", "uk.gov.justice.laa.crime.meansassessment.mapper.*", "uk.gov.justice.laa.crime.meansassessment.CrimeMeansAssessmentApplication"]
    threads = 5
    outputFormats = ["XML", "HTML"]
    timestampedReports = false
    mutationThreshold = 60
}

tasks["sonar"].dependsOn test

sonar {
    properties {
        property "sonar.exclusions", "**/entity/**.java , **/model/**.java , **/dto/**.java , **/config/**.java, **/jms/**.java,**/exception/**.java,**/handler/**.java, **/**StoredProcedureRepository.java"
        property "sonar.coverage.exclusions", "**/CrimeMeansAssessmentApplication.java"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.projectKey", "ministryofjustice_laa-crime-means-assessment"
        property "sonar.organization", "ministryofjustice"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectName", "Crime Apps :: crime-means-assessment"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"

    }
}

jsonSchema2Pojo {
    executions {
        main {
            methods.builders = true
            methods.buildersDynamic = true
            methods.annotateJsr303Jakarta = true
            fields.floatUseBigDecimal = true
            dateTime.dateTimeType = "java.time.LocalDateTime"
            klass.targetPackage = "uk.gov.justice.laa.crime.meansassessment.model.common"
            io.source.setFrom files("${project.rootDir}/src/main/resources/schemas")
        }
    }
}